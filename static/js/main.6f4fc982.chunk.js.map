{"version":3,"sources":["components/Card/index.jsx","components/Card_List/index.jsx","components/Search_Box/index.jsx","App.js","reportWebVitals.js","index.js","components/Search_Box/styles.module.css"],"names":["Card","props","className","src","monster","id","alt","name","email","CardList","monsters","map","SearchFilter","placeholder","searchField","searchFilter","type","styles","search","value","onChange","e","target","App","state","handleSearch","setState","fetch","then","data","json","users","this","searchFilters","filter","toLowerCase","includes","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"sOAiBeA,MAbf,SAAcC,GACZ,OACE,sBAAKC,UAAU,iBAAf,UACE,qBACEC,IAAG,+BAA0BF,EAAMG,QAAQC,GAAxC,0BACHC,IAAKL,EAAMG,QAAQG,OAErB,6BAAKN,EAAMG,QAAQG,OACnB,4BAAIN,EAAMG,QAAQI,Y,MCETC,MAVf,SAAkBR,GAChB,OACE,qBAAKC,UAAU,YAAf,SACGD,EAAMS,SAASC,KAAI,SAACP,GAAD,OAClB,cAAC,EAAD,CAAMA,QAASA,U,gBCMRQ,EAXM,SAAC,GAAgD,IAA9CC,EAA6C,EAA7CA,YAAaC,EAAgC,EAAhCA,YAAaC,EAAmB,EAAnBA,aAChD,OACE,uBACEC,KAAK,SACLd,UAAWe,IAAOC,OAClBL,YAAaA,EACbM,MAAOL,EACPM,SAAU,SAACC,GAAD,OAAON,EAAaM,EAAEC,OAAOH,WC+B9BI,E,4MAnCbC,MAAQ,CACNd,SAAU,GACVI,YAAa,I,EAEfW,aAAe,SAACN,GACd,EAAKO,SAAS,CACZZ,YAAaK,K,kEAII,IAAD,OAClBQ,MAAM,8CACHC,MAAK,SAAAC,GAAI,OAAIA,EAAKC,UACpBF,MAAK,SAAAG,GAAK,OAAI,EAAKL,SAAS,CAAChB,SAAUqB,S,+BAGhC,IAAD,EAC2BC,KAAKR,MAA/Bd,EADD,EACCA,SAAUI,EADX,EACWA,YACZmB,EAAgBvB,EAASwB,QAAO,SAAA9B,GAAO,OAAIA,EAAQG,KAAK4B,cAAcC,SAAStB,EAAYqB,kBACjG,OACE,sBAAKjC,UAAU,MAAf,UACE,kDACA,cAAC,EAAD,CACEW,YAAY,kBACZC,YAAakB,KAAKR,MAAMV,YACxBC,aAAciB,KAAKP,eAErB,cAAC,EAAD,CACEf,SAAUuB,W,GA7BFI,IAAMC,WCOTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCFdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K,sCCdAa,EAAOC,QAAU,CAAC,OAAS,0B","file":"static/js/main.6f4fc982.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./card.css\";\r\nimport \"../../App.css\";\r\n\r\nfunction Card(props) {\r\n  return (\r\n    <div className=\"card-container\">\r\n      <img\r\n        src={`https://robohash.org/${props.monster.id}?set=set2&size=220x220`}\r\n        alt={props.monster.name}\r\n      />\r\n      <h2>{props.monster.name}</h2>\r\n      <p>{props.monster.email}</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Card;\r\n","import React from \"react\";\r\nimport Card from \"../Card\";\r\nimport \"./card-list.css\";\r\n\r\nfunction CardList(props) {\r\n  return (\r\n    <div className=\"card-list\">\r\n      {props.monsters.map((monster) => (\r\n        <Card monster={monster} />\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CardList;\r\n","import React from \"react\";\r\nimport styles from \"./styles.module.css\";\r\n\r\nconst SearchFilter = ({ placeholder, searchField, searchFilter }) => {\r\n  return (\r\n    <input\r\n      type=\"search\"\r\n      className={styles.search}\r\n      placeholder={placeholder}\r\n      value={searchField}\r\n      onChange={(e) => searchFilter(e.target.value)}\r\n    />\r\n  );\r\n};\r\nexport default SearchFilter;\r\n","import React from 'react'\nimport './App.css';\nimport CardList from './components/Card_List'\nimport SearchFilter from './components/Search_Box'\n\nclass App extends React.Component {\n  state = {\n    monsters: [],\n    searchField: ''\n  }\n  handleSearch = (value) => {\n    this.setState({\n      searchField: value\n    })\n  }\n\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users')\n      .then(data => data.json())\n    .then(users => this.setState({monsters: users}))\n  }\n\n  render() {\n    const { monsters, searchField } = this.state\n    const searchFilters = monsters.filter(monster => monster.name.toLowerCase().includes(searchField.toLowerCase()))\n    return (\n      <div className=\"App\">\n        <h1>Monsters Rolodex</h1>\n        <SearchFilter\n          placeholder=\"Search Monsters\"\n          searchField={this.state.searchField}\n          searchFilter={this.handleSearch}\n        />\n        <CardList\n          monsters={searchFilters}  \n        />\n      </div>\n    )\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"search\":\"styles_search__174QO\"};"],"sourceRoot":""}